name: Publish latest

on:
  push:
    branches:
      - "release/latest"

env:
  NODE_VERSION: 16.x

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "${{ env.NODE_VERSION }}"
          registry-url: https://npm.pkg.github.com/
          always-auth: true
          scope: ${{ github.repository_owner }}

      - name: Get package version
        id: package_version_str
        uses: martinbeentjes/npm-get-version-action@master

      - name: Check if tag exists for version '${{ steps.package_version_str.outputs.current-version }}'
        uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: "v${{ steps.package_version_str.outputs.current-version }}"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Exit if tag exists
        if: ${{ steps.checkTag.outputs.exists == 'true' }}
        run: exit 1

      - name: Parse package version
        id: pkgVersion
        uses: doptools/action-parse-semver@main
        with:
          version: "${{ steps.package_version_str.outputs.current-version }}"
          versionRegex: "(.*)"

      - name: Init
        run: yarn  --ignore-scripts

      - name: Set package versions
        run: |
          npx lerna version ${{steps.pkgVersion.outputs.full}} --force-publish --no-commit-hooks --no-git-tag-version --no-push --yes
          git commit -a -m versions

      - name: Production Build
        run: yarn build
