@use "@angular/material" as mat;

$animation-speed: 0.2s;

/**************************
  Basic layout
**************************/
:host {
  --scrollbar-size: 0px;
  display: grid;
  position: relative;
  min-height: 100%;

  grid-template-columns: 1fr var(--scroll-container-scrollbar, 0px);
  > * {
    grid-row: 1 / -1;
    grid-column: 1 / -2;
  }
  > [cdkScrollable] {
    grid-column: 1 / -1;
  }

  [cdkScrollable] {
    overflow-y: auto;
    overflow-x: hidden;
    scroll-behavior: smooth;
    display: block;
    > * {
      min-height: 100%;
    }
  }
  
}
/**************************
  Background colors
**************************/
:host {
  background-color: var(--background-app-bar);
  [layer-group="scroll"] {
    background-color: var(--background-background);
  }
  .application-border{
    pointer-events: none;
    position: absolute;
    @include mat.elevation(2);
  }
}

/**************************
  Scrollbar styling
**************************/
::-webkit-scrollbar {
  width: 14px;
  height: 14px;
  &-button {
    background-color: var(--background-background);
    height: 0;
    width: 0;
    display: none;
  }
  &-track {
    background-color: var(--background-background);
    outline: 1px solid var(--background-raised-button);
  }
  &-thumb {
    border-radius: 6px;
    background-clip: content-box;
    border: 2px solid transparent;
    background-color: var(--background-app-bar);
  }
}

/**************************
  Z sorting
**************************/
:host {
  [cdkScrollable],
  [layer-group] {
    width: 100%;
  }
  [layer-group="viewport"] {
    z-index: 40;
  }
  [layer-group="application"] {
    z-index: 30;
    // border: 1px solid var(--background-raised-button);
  }
  [layer-group="content"] {
    z-index: 20;
  }
  > [cdkScrollable] {
    z-index: 10;
  }
}

/**************************
  Constraint calculations
**************************/

:host {
  --max-app-width: var(
    --constrain-app-width,
    var(--viewport-center-width, 0px)
  );
  --viewport-space: max(
    calc(var(--viewport-center-width, 0px) - var(--max-app-width)),
    0px
  );
}

/**************************
  Constraint alignment
**************************/

:host {
  --viewport-space-left: 0px;
  --viewport-space-right: var(--viewport-space);

  &[constrain="center"] {
    --viewport-space-left: calc(var(--viewport-space) / 2);
    --viewport-space-right: calc(var(--viewport-space) / 2);
  }
  &[constrain="right"] {
    --viewport-space-left: var(--viewport-space);
    --viewport-space-right: 0px;
  }
}

/******************************
  Layer inset calculations
******************************/

:host {
  --vt: var(--viewport-top-height, 0px);
  --vb: var(--viewport-bottom-height, 0px);
  --vl: var(--viewport-left-width, 0px);
  --vr: var(--viewport-right-width, 0px);

  --vti: var(--vt);
  --vbi: var(--vb);
  --vli: calc(var(--vl) + var(--viewport-space-left, 0px));
  --vri: calc(var(--vr) + var(--viewport-space-right, 0px));

  --at: var(--application-top-height, 0px);
  --ab: var(--application-bottom-height, 0px);
  --al: var(--application-left-width, 0px);
  --ar: var(--application-right-width, 0px);

  --ati: calc(var(--vti) + var(--at));
  --abi: calc(var(--vbi) + var(--ab));
  --ali: calc(var(--vli) + var(--al));
  --ari: calc(var(--vri) + var(--ar));

  --ct: var(--content-top-height, 0px);
  --cb: var(--content-bottom-height, 0px);
  --cl: var(--content-left-width, 0px);
  --cr: var(--content-right-width, 0px);

  --cti: calc(var(--ati) + var(--ct));
  --cbi: calc(var(--abi) + var(--cb));
  --cli: calc(var(--ali) + var(--cl));
  --cri: calc(var(--ari) + var(--cr));

  --viewport-inset: var(--vti) var(--vri) var(--vbi) var(--vli);
  --application-inset: var(--ati) var(--ari) var(--abi) var(--ali);

  --content-inset: var(--cti) var(--cri) var(--cbi) var(--cli);
  --content-inner-inset: var(--ct) var(--cr) var(--cb) var(--cl);

  ::ng-deep {
    .viewport-inset {
      inset: var(--viewport-inset);
    }
    .viewport-inset-padding {
      padding: var(--viewport-inset);
    }
    .viewport-inset-margin {
      margin: var(--viewport-inset);
    }

    .application-inset {
      inset: var(--application-inset);
    }
    .application-inset-padding {
      padding: var(--application-inset);
    }
    .application-inset-margin {
      margin: var(--application-inset);
    }

    .content-inset {
      inset: var(--content-inset);
    }
    .content-inset-padding {
      padding: var(--content-inset);
    }
    .content-inset-margin {
      margin: var(--content-inset);
    }

    /*
    .content-inner-inset-padding {
      padding: var(--content-inner-inset);
    }
    .scroll-inner-inset-padding {
      padding: var(--content-inner-inset);
    }
    */
  }
}

//??
/******************************************
  Background colors
******************************************/
:host {
  div[layer-group="application"],
  div[layer-group="scroll"] {
    --area-top-background: var(--background-app-bar);
    --area-left-background: var(--background-app-bar);
    --area-bottom-background: var(--background-app-bar);
    --area-right-background: var(--background-app-bar);
  }
}

//??
/******************************************
  Hide on scroll animations
******************************************/
:host {
  --scroll-hide-duration: #{$animation-speed};
  .hides-on-scroll {
    &.horizontal {
      &.start {
        transition: margin-top ease-out var(--scroll-hide-duration);
      }
      &.end {
        transition: margin-bottom ease-out var(--scroll-hide-duration);
      }
    }
    &.vertical {
      &.start {
        transition: margin-left ease-out var(--scroll-hide-duration);
      }
      &.end {
        transition: margin-right ease-out var(--scroll-hide-duration);
      }
    }
  }

  &.scroll-hide .hides-on-scroll {
    &.horizontal {
      &.start {
        margin-top: calc(var(--height) * -1);
      }
      &.end {
        margin-bottom: calc(var(--height) * -1);
      }
    }
    &.vertical {
      &.start {
        margin-left: calc(var(--width) * -1);
      }
      &.end {
        margin-right: calc(var(--width) * -1);
      }
    }
  }
}

/******************************************
  Modal background effects and animation
******************************************/
:host {
  --modal-hide-duration: 0.2s;

  > div.modal {
    grid-row: 1 / -1;
    grid-column: 1 / -1;
    width: 100%;
    z-index: 35;
  }

  div[modal] {
    flex: 1;
  }

  .modal-base ::ng-deep > [layer="content"],
  .modal {
    transition: filter ease-in var(--modal-hide-duration);
    &::after {
      content: " ";
      pointer-events: none;
      transition: background-color ease-in var(--modal-hide-duration);
      position: absolute;
      inset: 0;
      opacity: 0.2;
    }
  }

  .modal-base.modal-disable ::ng-deep > [layer="content"],
  .modal-disable:not(.modal-base) {
    pointer-events: none !important;
    ::ng-deep {
      [area] * {
        pointer-events: none !important;
      }
    }
  }

  .modal-disable:not(.modal-base) ::ng-deep * {
    pointer-events: none !important;

  }
  [content-container].modal-disable:not(.modal-base) {
    pointer-events: all !important;
    &::after{
      content: ' ';
      background: red;
      position: absolute;
      z-index: 50;
      inset: 0;
      pointer-events: all;
    }
  }
  

  &[modal="3"] {
    > div.modal {
      z-index: 25;
    }
  }
  &[modal="4"],
  &[modal="3"],
  &[modal="2"],
  &[modal="1"] {
    .modal-base.modal-blur ::ng-deep > [layer="content"],
    .modal-blur:not(.modal-base) {
      filter: blur(1px);
    }

    .modal-base.modal-gray ::ng-deep > [layer="content"],
    .modal-gray:not(.modal-base) {
      filter: grayscale(0.69) brightness(69%);
    }

    .modal-base.modal-tint ::ng-deep > [layer="content"],
    .modal-tint:not(.modal-base) {
      &::after {
        background-color: var(--foreground-disabled);
      }
    }

    .modal-base.modal-blur.modal-gray ::ng-deep > [layer="content"],
    .modal-blur.modal-gray:not(.modal-base) {
      filter: blur(1px) grayscale(0.69) brightness(69%);
    }

    .scroll-disable {
      pointer-events: none;
      visibility: hidden;
      > * {
        visibility: visible;
      }
    }
  }
}
